class Solution {
public:
	bool isNumber(const char *s) {
        int i  = 0;
        string current = s;
        //remove the leading zeros and trailing zeros and also the sign
        while (current[i]==' ') {
            i++;
            if (i >= current.length()) {
                //eg: len is 3 and i is e, means it is totally blank string, this is false
                return false;
            }
        }
        if (current[i]=='+' ||current[i]=='-') {
            i++;
        }
        int j = (int)current.length()-1;
        while (current[j]==' ') {
            j--;
        }
        
        if (i <=j) {
            current = current.substr(i,j-i+1);
        }
        else
            return false;
        
        int dot=-1;//keep the record of the dot
        int ee = -1;//keep the record of e
        for (int i = 0; i < current.length(); ++i) {
            if (dot==-1 && current[i] == '.') {
                dot = i;
            }
            else if(ee == -1 && current[i]=='e') {
                ee = i;
                if (i+1 < current.length() && (current[i+1]=='+' || current[i+1]=='-')) {
                    ++i;
                }
            }
            else {
                if (std::isdigit(current[i])) {
                    continue;
                }
                else {
                    return false;
                }
            }
        }

        //xxx.xxexx
        string startStr,midStr,lastStr;
        
        //xxx
        if (dot==-1 && ee == -1) {
            startStr = current; //xxx
            if (startStr.length()< 1) {
                return false;
            }
            else
                return true;
        }
        //xxx.xxx
        else if(dot!=-1 && ee==-1) {
            startStr = current.substr(0,dot);
            midStr = current.substr(dot+1);
            if (startStr.length()<1 && midStr.length()<1) {
                return false;
            }
            else
                return true; //.1  1.

        }
        //xxxeyy
        else if(dot==-1 && ee!=1) {
            midStr = current.substr(0,ee);
            if (midStr.length() < 1) {
                return false;
            }
            if (ee+1 < current.length() && (current[ee+1]=='+' ||current[ee+1]=='-')) {
                lastStr = current.substr(ee+2);
            }
            else
                lastStr = current.substr(ee+1);
            if (lastStr.length() < 1) {
                return false;
            }
        }
        //xxx.yyezzz
        else {
            if (dot > ee) {
                return false;
            }
            startStr = current.substr(0,dot);
            midStr = current.substr(dot+1,ee-dot-1);
            if (startStr.length() < 1 && midStr.length() < 1) {
                return false;
            }
            if (ee+1 < current.length() && (current[ee+1]=='+' ||current[ee+1]=='-')) {
                lastStr = current.substr(ee+2);
            }
            else
                lastStr = current.substr(ee+1);
            if (lastStr.length() < 1) {
                return false;
            }
        }
        
        return true;
    }
};
